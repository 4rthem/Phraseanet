package {		import flash.display.Sprite;	import flash.events.Event;	/**	 * Based on the work of Peter Wright:	 * http://www.f-90.co.uk/blog/	 * 	 * This is a slide panel thumbnail navigator for displaying	 * a continuous scrolling list of thumbnail images for use	 * in slideshows and other navigation.	 *  	 * @author Joel Hooks	 * 	 */		public class Navigator extends Sprite {		/**		 * Array of NavItem objects to display in the scroll list 		 */				private var _navArray	:Array;		/**		 * Currently selected NavItem 		 */				private var _centerX	:Number		= 200;		/**		 * The sum of all the NavItem widths 		 */		private var totalWidth	:Number		= 0;		/**		 * The current width of the container.		 * 		 * TODO: containerHeight for vertical layouts.		 * Update on app resize. 		 */		private var _containerWidth:Number = 0;		/**		 * The width of an individual item. 		 * 		 * TODO: This should be changed to accept variables		 * as well as adding a height for vertical layouts. 		 */				private var _speed:int;				private var _space:int;		/**		 * Constructor for Navigator		 *  		 * @param images XML list of images to load		 * @param damping Controls the transition speed as list scrolls		 * @param thumbSize the size of the thumbnail object		 * @param centerX The mid-point.		 * @param containerWidth The width of the container holding the navigator.		 * @param slideShow is this a slideshow?		 * @param slideDelatSeconds how many seconds to hold each fram in a slideshow.		 * 		 */					public function Navigator(xml:XML, damping:Number, centerX:Number, containerWidth:Number, zoom:Number, speed:int, spaceBetweenImages:int, media:String)		{			_centerX	= centerX;			_navArray	= [];			_containerWidth = containerWidth;			_speed = speed;			_space = spaceBetweenImages;			var count:int = 0;			var navItem:NavItem;						var mediaNS:Namespace = new Namespace('http://search.yahoo.com/mrss/');			var nodeName:QName = new QName(mediaNS, media);						for each( var item:XML in xml.channel.item )			{				var z:XMLList = item.child(nodeName)[0].(@isDefault=="true");;				navItem = new NavItem(count, z.@url, z.@width, z.@height);								addChild(navItem);								navItem.width *= zoom;				navItem.height *= zoom;				_navArray.push(navItem);				totalWidth += navItem.width + _space;				count++;			}						_navArray[0].x = 0;			for( var i:int=0; i<this.navArray.length; i++)			{				navItem = _navArray[i];				navItem.y = ( this.height - navItem.height) / 2;			}							swap();		}				/**		 * Start the slideshow 		 * 		 */				public function startSlideshow( ):void		{ 			addEventListener(Event.ENTER_FRAME, setPositions2);		}				/**		 * Stop the slideshow		 * 		 */				public function stopSlideshow( ):void		{			removeEventListener(Event.ENTER_FRAME, setPositions2);		}				private function setPositions2(e:Event = null):void		{			removeEventListener(Event.ENTER_FRAME, setPositions2);			_navArray[0].x -= _speed;			swap();			addEventListener(Event.ENTER_FRAME, setPositions2);		}				/**		 * Shifts the images to keep the continuous scroll continuous		 * @private		 */				private function swap():void		{			var i:int;			if( (_navArray[0].x + _navArray[0].width) < 0)				_navArray.push(_navArray.shift());						for (i = 1; i<_navArray.length; i++)			{				_navArray[i].x = _navArray[i-1].x + _navArray[i-1].width + _space;			}		}				/**		 * An array of NavItems		 * @return 		 * 		 */				public function get navArray():Array { return _navArray; }			}	}